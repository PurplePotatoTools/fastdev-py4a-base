// automatically generated by the FlatBuffers compiler, do not modify

package com.mz.fastapp.flatbuffers_py2java;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FlatBuffersResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static FlatBuffersResponse getRootAsFlatBuffersResponse(ByteBuffer _bb) { return getRootAsFlatBuffersResponse(_bb, new FlatBuffersResponse()); }
  public static FlatBuffersResponse getRootAsFlatBuffersResponse(ByteBuffer _bb, FlatBuffersResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FlatBuffersResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject data() { return data(new com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject()); }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject data(com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String exception() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer exceptionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer exceptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createFlatBuffersResponse(FlatBufferBuilder builder,
      byte type,
      int dataOffset,
      int exceptionOffset) {
    builder.startTable(3);
    FlatBuffersResponse.addException(builder, exceptionOffset);
    FlatBuffersResponse.addData(builder, dataOffset);
    FlatBuffersResponse.addType(builder, type);
    return FlatBuffersResponse.endFlatBuffersResponse(builder);
  }

  public static void startFlatBuffersResponse(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(1, dataOffset, 0); }
  public static void addException(FlatBufferBuilder builder, int exceptionOffset) { builder.addOffset(2, exceptionOffset, 0); }
  public static int endFlatBuffersResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FlatBuffersResponse get(int j) { return get(new FlatBuffersResponse(), j); }
    public FlatBuffersResponse get(FlatBuffersResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

