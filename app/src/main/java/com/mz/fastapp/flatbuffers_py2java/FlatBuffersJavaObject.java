// automatically generated by the FlatBuffers compiler, do not modify

package com.mz.fastapp.flatbuffers_py2java;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FlatBuffersJavaObject extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static FlatBuffersJavaObject getRootAsFlatBuffersJavaObject(ByteBuffer _bb) { return getRootAsFlatBuffersJavaObject(_bb, new FlatBuffersJavaObject()); }
  public static FlatBuffersJavaObject getRootAsFlatBuffersJavaObject(ByteBuffer _bb, FlatBuffersJavaObject obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FlatBuffersJavaObject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public int refValue() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int bytesValue(int j) { int o = __offset(8); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int bytesValueLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector bytesValueVector() { return bytesValueVector(new ByteVector()); }
  public ByteVector bytesValueVector(ByteVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer bytesValueAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer bytesValueInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String stringValue() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer stringValueAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer stringValueInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public byte byteValue() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public short shortValue() { int o = __offset(14); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public int intValue() { int o = __offset(16); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long longValue() { int o = __offset(18); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public float floatValue() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public double doubleValue() { int o = __offset(22); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public boolean booleanValue() { int o = __offset(24); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject arrayValue(int j) { return arrayValue(new com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject(), j); }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject arrayValue(com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject obj, int j) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int arrayValueLength() { int o = __offset(26); return o != 0 ? __vector_len(o) : 0; }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject.Vector arrayValueVector() { return arrayValueVector(new com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject.Vector()); }
  public com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject.Vector arrayValueVector(com.mz.fastapp.flatbuffers_py2java.FlatBuffersJavaObject.Vector obj) { int o = __offset(26); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createFlatBuffersJavaObject(FlatBufferBuilder builder,
      byte type,
      int refValue,
      int bytesValueOffset,
      int stringValueOffset,
      byte byteValue,
      short shortValue,
      int intValue,
      long longValue,
      float floatValue,
      double doubleValue,
      boolean booleanValue,
      int arrayValueOffset) {
    builder.startTable(12);
    FlatBuffersJavaObject.addDoubleValue(builder, doubleValue);
    FlatBuffersJavaObject.addLongValue(builder, longValue);
    FlatBuffersJavaObject.addArrayValue(builder, arrayValueOffset);
    FlatBuffersJavaObject.addFloatValue(builder, floatValue);
    FlatBuffersJavaObject.addIntValue(builder, intValue);
    FlatBuffersJavaObject.addStringValue(builder, stringValueOffset);
    FlatBuffersJavaObject.addBytesValue(builder, bytesValueOffset);
    FlatBuffersJavaObject.addRefValue(builder, refValue);
    FlatBuffersJavaObject.addShortValue(builder, shortValue);
    FlatBuffersJavaObject.addBooleanValue(builder, booleanValue);
    FlatBuffersJavaObject.addByteValue(builder, byteValue);
    FlatBuffersJavaObject.addType(builder, type);
    return FlatBuffersJavaObject.endFlatBuffersJavaObject(builder);
  }

  public static void startFlatBuffersJavaObject(FlatBufferBuilder builder) { builder.startTable(12); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addRefValue(FlatBufferBuilder builder, int refValue) { builder.addInt(1, refValue, 0); }
  public static void addBytesValue(FlatBufferBuilder builder, int bytesValueOffset) { builder.addOffset(2, bytesValueOffset, 0); }
  public static int createBytesValueVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createBytesValueVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startBytesValueVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addStringValue(FlatBufferBuilder builder, int stringValueOffset) { builder.addOffset(3, stringValueOffset, 0); }
  public static void addByteValue(FlatBufferBuilder builder, byte byteValue) { builder.addByte(4, byteValue, 0); }
  public static void addShortValue(FlatBufferBuilder builder, short shortValue) { builder.addShort(5, shortValue, 0); }
  public static void addIntValue(FlatBufferBuilder builder, int intValue) { builder.addInt(6, intValue, 0); }
  public static void addLongValue(FlatBufferBuilder builder, long longValue) { builder.addLong(7, longValue, 0L); }
  public static void addFloatValue(FlatBufferBuilder builder, float floatValue) { builder.addFloat(8, floatValue, 0.0f); }
  public static void addDoubleValue(FlatBufferBuilder builder, double doubleValue) { builder.addDouble(9, doubleValue, 0.0); }
  public static void addBooleanValue(FlatBufferBuilder builder, boolean booleanValue) { builder.addBoolean(10, booleanValue, false); }
  public static void addArrayValue(FlatBufferBuilder builder, int arrayValueOffset) { builder.addOffset(11, arrayValueOffset, 0); }
  public static int createArrayValueVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startArrayValueVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endFlatBuffersJavaObject(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FlatBuffersJavaObject get(int j) { return get(new FlatBuffersJavaObject(), j); }
    public FlatBuffersJavaObject get(FlatBuffersJavaObject obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

